### 0.06 ###
containers.Session:
  from_filename() class method now uses read_pcap instread of gen_flows_up_down.
  Effectively using a custom function to read data from tshark output into a DataFrame instead of steelscript-wireshark.

tests:
  test_session1:
    Did some adjustments to the test suite to fit the new Session class structure.

  test_session2:
    A new test which reads in an entire pcap file.
    Currently checks that the amout of read packets fits the actual amount of packets in the pcap file.

utils.read_pcap:
  Implemented read_pcap() which simply calls tshark in the background and sends its output to pandas.read_table.
  Apparently simpler and more reliable than steelscript-wireshark.


### 0.05 ###
utils.read_pcap:
  gen_flows_up_down():
    Now returns up_flow, down_flow (in this order) according to tcp.dstport 443


### 0.04 ###
utils.general:
  + cleanup_pyc():
    .pyc file cleanup function (root/cleanup_pyc_files.py calls it).

  + gen_data_folders():
    walks the root data folder and returns all relevant folder names containing pcap files.

  + gen_pcap_filenames():
    from a given folder

README.md:
  + data folder structure explanation

core:
  Converter.py:
    Merged sessions_to_samples() and pcap_to_feature_vector into converter
    pcap_to_feature_vector() now reads the feature_methods list from a class field

changelog.txt:
  Renamed changes.txt to changelog.txt

### 0.03 ###
Added a TODO list

sessions_to_samples:
  Added this module to map a folder of pcap files to a list of sample feature vectors

### 0.02 ###
pcap_to_feature_vector.py:
  pcap_to_feature_vector:
      Dynamically call methods

containers:
  Session:
    from_filename:
        returning only session DataFrame - matching the constructor
    Added packet_count()
